/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2025-01-07 19:13:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.favourites.FavoriteDAO;
import com.favourites.Favorite;
import com.addgame.GameDAO;
import com.addgame.Game;

public final class favourite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("com.favourites.FavoriteDAO");
    _jspx_imports_classes.add("com.addgame.GameDAO");
    _jspx_imports_classes.add("com.addgame.Game");
    _jspx_imports_classes.add("com.favourites.Favorite");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
   

// Use a different variable name to avoid conflict with the implicit session object
HttpSession userSession = request.getSession();
Integer userId = (Integer) userSession.getAttribute("user_id");

    if (userId == null) {
        response.sendRedirect("login.jsp"); // Redirect to login if the user is not authenticated
        return;
    }

    // Get the list of game IDs from the favorites table for the logged-in user
    FavoriteDAO favoriteDAO = new FavoriteDAO();
    List<Integer> favoriteGameIds = favoriteDAO.getFavoritesByUserId(userId);

    // Fetch game details for each favorite game
    List<Game> favoriteGames = new ArrayList<>();
    GameDAO gameDAO = new GameDAO();
    for (Integer gameId : favoriteGameIds) {
        Game game = gameDAO.getGameById(gameId);
        if (game != null) {
            favoriteGames.add(game);
        }
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Your Favorite Games</title>\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"CSS/favourite.css\">\r\n");
      out.write("   \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"fav-container\">\r\n");
      out.write("    <h1 class=\"fav-page-title\">Your Favorite Games</h1>\r\n");
      out.write("\r\n");
      out.write("    ");
 if (favoriteGames.isEmpty()) { 
      out.write("\r\n");
      out.write("        <div class=\"fav-no-favorites\">You have no favorite games yet.</div>\r\n");
      out.write("    ");
 } else { 
      out.write("\r\n");
      out.write("        <div class=\"fav-card-container\">\r\n");
      out.write("            ");
 for (Game game : favoriteGames) { 
      out.write("\r\n");
      out.write("                <div class=\"fav-game-card\">\r\n");
      out.write("                    <img src=\"");
      out.print( game.getCover_image_path() );
      out.write("\" alt=\"");
      out.print( game.getTitle() );
      out.write("\">\r\n");
      out.write("                    <h3>");
      out.print( game.getTitle() );
      out.write("</h3>\r\n");
      out.write("                    <p>");
      out.print( game.getGenre() );
      out.write("</p>\r\n");
      out.write("                    <form action=\"removefavorite\" method=\"POST\">\r\n");
      out.write("                        <input type=\"hidden\" name=\"game_id\" value=\"");
      out.print( game.getGame_id() );
      out.write("\">\r\n");
      out.write("                        <button type=\"submit\" class=\"fav-remove-btn\">Remove from Favorites</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                    <form action=\"gameDetails\" method=\"GET\">\r\n");
      out.write("                        <input type=\"hidden\" name=\"game_id\" value=\"");
      out.print( game.getGame_id() );
      out.write("\">\r\n");
      out.write("                        <button type=\"submit\" class=\"fav-view-details-btn\">View Details</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
