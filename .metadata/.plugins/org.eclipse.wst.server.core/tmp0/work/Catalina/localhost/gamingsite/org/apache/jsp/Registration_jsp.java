/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2025-01-20 15:33:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Registration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>User Registration</title>\r\n");
      out.write("    <!-- Bootstrap CSS -->\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            background-color: #f8f9fa;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-container {\r\n");
      out.write("            max-width: 500px;\r\n");
      out.write("            margin: 50px auto;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            background: #ffffff;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-container h1 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button {\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .error-message {\r\n");
      out.write("            color: #dc3545;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            display: none;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <link href=\"./legendarena.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"#\">Legend Arena</a>\r\n");
      out.write("        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("            <ul class=\"navbar-nav ms-auto\">\r\n");
      out.write("                <li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Home</a></li>\r\n");
      out.write("                <li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Games</a></li>\r\n");
      out.write("                <li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Reviews</a></li>\r\n");
      out.write("                <li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Contact</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"form-container\">\r\n");
      out.write("        <h1>User Registration</h1>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Check for error message -->\r\n");
      out.write("        ");
 String errorMessage = (String) request.getAttribute("errorMessage"); 
      out.write("\r\n");
      out.write("        ");
 if (errorMessage != null) { 
      out.write("\r\n");
      out.write("            <div class=\"alert alert-danger\">\r\n");
      out.write("                ");
      out.print( errorMessage );
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <form id=\"registrationForm\" action=\"register\" method=\"post\" novalidate>\r\n");
      out.write("            <!-- Name Field -->\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label for=\"name\" class=\"form-label\">Name:</label>\r\n");
      out.write("                <input type=\"text\" id=\"name\" name=\"name\" class=\"form-control\" required placeholder=\"Enter your full name\">\r\n");
      out.write("                <div class=\"invalid-feedback\">Please enter your name.</div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Username Field -->\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label for=\"username\" class=\"form-label\">Username:</label>\r\n");
      out.write("                <input type=\"text\" id=\"username\" name=\"username\" class=\"form-control\" required placeholder=\"Choose a username\">\r\n");
      out.write("                <div class=\"invalid-feedback\">Please enter a username.</div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Email Field -->\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label for=\"email\" class=\"form-label\">Email:</label>\r\n");
      out.write("                <input type=\"email\" id=\"email\" name=\"email\" class=\"form-control\" required placeholder=\"Enter your email address\">\r\n");
      out.write("                <div class=\"invalid-feedback\">Please enter a valid email address.</div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Password Field -->\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label for=\"password\" class=\"form-label\">Password:</label>\r\n");
      out.write("                <input type=\"password\" id=\"password\" name=\"password\" class=\"form-control\" required placeholder=\"Choose a secure password\">\r\n");
      out.write("                <div class=\"invalid-feedback\">Please enter a password.</div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Confirm Password Field -->\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label for=\"confirm_password\" class=\"form-label\">Confirm Password:</label>\r\n");
      out.write("                <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\" class=\"form-control\" required placeholder=\"Confirm your password\">\r\n");
      out.write("                <div class=\"invalid-feedback\">Passwords must match.</div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Role Selection -->\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label for=\"user_role\" class=\"form-label\">Role:</label>\r\n");
      out.write("                <select id=\"user_role\" name=\"user_role\" class=\"form-select\" required>\r\n");
      out.write("                    <option value=\"\" disabled selected>Select role</option>\r\n");
      out.write("                    <option value=\"user\">User</option>\r\n");
      out.write("                    <option value=\"admin\">Admin</option>\r\n");
      out.write("                </select>\r\n");
      out.write("                <div class=\"invalid-feedback\">Please select a role.</div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Submit Button -->\r\n");
      out.write("            <button type=\"submit\" class=\"btn btn-success w-100\">Register</button>\r\n");
      out.write("        </form>\r\n");
      out.write("       \r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap JS -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    // JavaScript for form validation\r\n");
      out.write("    document.getElementById('registrationForm').addEventListener('submit', function (event) {\r\n");
      out.write("        const form = this;\r\n");
      out.write("        const password = document.getElementById('password').value;\r\n");
      out.write("        const confirmPassword = document.getElementById('confirm_password').value;\r\n");
      out.write("\r\n");
      out.write("        // Reset validation\r\n");
      out.write("        form.classList.remove('was-validated');\r\n");
      out.write("\r\n");
      out.write("        // Check if passwords match\r\n");
      out.write("        if (password !== confirmPassword) {\r\n");
      out.write("            event.preventDefault();\r\n");
      out.write("            event.stopPropagation();\r\n");
      out.write("            document.getElementById('confirm_password').classList.add('is-invalid');\r\n");
      out.write("        } else {\r\n");
      out.write("            document.getElementById('confirm_password').classList.remove('is-invalid');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Bootstrap validation\r\n");
      out.write("        if (!form.checkValidity()) {\r\n");
      out.write("            event.preventDefault();\r\n");
      out.write("            event.stopPropagation();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        form.classList.add('was-validated');\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("<footer>\r\n");
      out.write("    <div class=\"footer\">\r\n");
      out.write("        <p>&copy; 2024 Legend Arena. All rights reserved.</p>\r\n");
      out.write("    </div>\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
